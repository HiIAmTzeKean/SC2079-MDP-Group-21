#ifndef INC_COMMANDS_FLAGS_H_
#define INC_COMMANDS_FLAGS_H_

#define CMD_FULL_STOP 'S'				//bring car to a complete stop. (all other fields are not required, i.e., send 'S\n')
#define CMD_TURN_IN_PLACE 'P'  // Pivot turn command

#define CMD_FORWARD_DIST_TARGET 'T'		//go forward for a target distance/angle.
#define CMD_FORWARD_DIST_AWAY 'W'		//go forward until within a certain distance.
#define CMD_BACKWARD_DIST_TARGET 't'	//go backward for a target distance/angle.
#define CMD_BACKWARD_DIST_AWAY 'w'		//go backward until a certain distance apart.

#define CMD_FORWARD_DIST_L 'L'			//go forward until left IR sensor is greater than value provided.
#define CMD_FORWARD_DIST_R 'R'			//go forward until right IR sensor is greater than value provided.
#define CMD_BACKWARD_DIST_L 'l'			//go backward until left IR sensor is greater than value provided.
#define CMD_BACKWARD_DIST_R 'r'			//go backward until right IR sensor is greater than value provided.

#define CMD_INFO_MARKER 'M'				//signal command has been passed. (used for tracking)
#define CMD_INFO_DIST 'D'				//signal start/stop of accumulative distance tracking. (all other fields are not required, i.e., send 'D\n')
//NOTE: distance tracked is NOT displacement; i.e., send different signals for different directions.

#define CMD_SEP '|'						//separator.
#define CMD_END '\n'					//end character.
#define CMD_RCV 'r'						//received.
#define CMD_FIN 'f'						//finished.
#endif /* INC_COMMANDS_FLAGS_H_ */
